size = get_world_size()
if size == 10:
    moves = (
        (
            (),
            (North,),
            (North, North),
            (North, North, North),
            (North, North, North, North),
            (South, South, South, South, South),
            (South, South, South, South),
            (South, South, South),
            (South, South),
            (South,),
        ),
        (
            (East,),
            (East, North),
            (East, North, North),
            (East, North, North, North),
            (East, North, North, North, North),
            (East, South, South, South, South, South),
            (East, South, South, South, South),
            (East, South, South, South),
            (East, South, South),
            (East, South),
        ),
        (
            (East, East),
            (East, East, North),
            (East, East, North, North),
            (East, East, North, North, North),
            (East, East, North, North, North, North),
            (East, East, South, South, South, South, South),
            (East, East, South, South, South, South),
            (East, East, South, South, South),
            (East, East, South, South),
            (East, East, South),
        ),
        (
            (East, East, East),
            (East, East, East, North),
            (East, East, East, North, North),
            (East, East, East, North, North, North),
            (East, East, East, North, North, North, North),
            (East, East, East, South, South, South, South, South),
            (East, East, East, South, South, South, South),
            (East, East, East, South, South, South),
            (East, East, East, South, South),
            (East, East, East, South),
        ),
        (
            (East, East, East, East),
            (East, East, East, East, North),
            (East, East, East, East, North, North),
            (East, East, East, East, North, North, North),
            (East, East, East, East, North, North, North, North),
            (East, East, East, East, South, South, South, South, South),
            (East, East, East, East, South, South, South, South),
            (East, East, East, East, South, South, South),
            (East, East, East, East, South, South),
            (East, East, East, East, South),
        ),
        (
            (West, West, West, West, West),
            (West, West, West, West, West, North),
            (West, West, West, West, West, North, North),
            (West, West, West, West, West, North, North, North),
            (West, West, West, West, West, North, North, North, North, ),
            (West, West, West, West, West, South, South, South, South, South),
            (West, West, West, West, West, South, South, South, South),
            (West, West, West, West, West, South, South, South),
            (West, West, West, West, West, South, South),
            (West, West, West, West, West, South),
        ),
        (
            (West, West, West, West),
            (West, West, West, West, North),
            (West, West, West, West, North, North),
            (West, West, West, West, North, North, North),
            (West, West, West, West, North, North, North, North),
            (West, West, West, West, South, South, South, South, South),
            (West, West, West, West, South, South, South, South),
            (West, West, West, West, South, South, South),
            (West, West, West, West, South, South),
            (West, West, West, West, South),
        ),
        (
            (West, West, West),
            (West, West, West, North),
            (West, West, West, North, North),
            (West, West, West, North, North, North),
            (West, West, West, North, North, North, North),
            (West, West, West, South, South, South, South, South),
            (West, West, West, South, South, South, South),
            (West, West, West, South, South, South),
            (West, West, West, South, South),
            (West, West, West, South),
        ),
        (
            (West, West),
            (West, West, North),
            (West, West, North, North),
            (West, West, North, North, North),
            (West, West, North, North, North, North),
            (West, West, South, South, South, South, South),
            (West, West, South, South, South, South),
            (West, West, South, South, South),
            (West, West, South, South),
            (West, West, South),
        ),
        (
            (West,),
            (West, North),
            (West, North, North),
            (West, North, North, North),
            (West, North, North, North, North),
            (West, South, South, South, South, South),
            (West, South, South, South, South),
            (West, South, South, South),
            (West, South, South),
            (West, South),
        ),
    )
elif size == 3:
    moves = (
        ((), (North,), (South,)),
        ((East,), (East, North), (East, South)),
        ((West,), (West, North), (West, South)),
    )
elif size == 4:
    moves = (
        ((), (North,), (South, South), (South,)),
        ((East,), (East, North), (East, South, South), (East, South)),
        (
            (West, West),
            (West, West, North),
            (West, West, South, South),
            (West, West, South),
        ),
        ((West,), (West, North), (West, South, South), (West, South)),
    )
elif size == 5:
    moves = (
        ((), (North,), (North, North), (South, South), (South,)),
        (
            (East,),
            (East, North),
            (East, North, North),
            (East, South, South),
            (East, South),
        ),
        (
            (East, East),
            (East, East, North),
            (East, East, North, North),
            (East, East, South, South),
            (East, East, South),
        ),
        (
            (West, West),
            (West, West, North),
            (West, West, North, North),
            (West, West, South, South),
            (West, West, South),
        ),
        (
            (West,),
            (West, North),
            (West, North, North),
            (West, South, South),
            (West, South),
        ),
    )
elif size == 6:
    moves = (
        (
            (),
            (North,),
            (North, North),
            (South, South, South),
            (South, South),
            (South,),
        ),
        (
            (East,),
            (East, North),
            (East, North, North),
            (East, South, South, South),
            (East, South, South),
            (East, South),
        ),
        (
            (East, East),
            (East, East, North),
            (East, East, North, North),
            (East, East, South, South, South),
            (East, East, South, South),
            (East, East, South),
        ),
        (
            (West, West, West),
            (West, West, West, North),
            (West, West, West, North, North),
            (West, West, West, South, South, South),
            (West, West, West, South, South),
            (West, West, West, South),
        ),
        (
            (West, West),
            (West, West, North),
            (West, West, North, North),
            (West, West, South, South, South),
            (West, West, South, South),
            (West, West, South),
        ),
        (
            (West,),
            (West, North),
            (West, North, North),
            (West, South, South, South),
            (West, South, South),
            (West, South),
        ),
    )
elif size == 7:
    moves = (
        (
            (),
            (North,),
            (North, North),
            (North, North, North),
            (South, South, South),
            (South, South),
            (South,),
        ),
        (
            (East,),
            (East, North),
            (East, North, North),
            (East, North, North, North),
            (East, South, South, South),
            (East, South, South),
            (East, South),
        ),
        (
            (East, East),
            (East, East, North),
            (East, East, North, North),
            (East, East, North, North, North),
            (East, East, South, South, South),
            (East, East, South, South),
            (East, East, South),
        ),
        (
            (East, East, East),
            (East, East, East, North),
            (East, East, East, North, North),
            (East, East, East, North, North, North),
            (East, East, East, South, South, South),
            (East, East, East, South, South),
            (East, East, East, South),
        ),
        (
            (West, West, West),
            (West, West, West, North),
            (West, West, West, North, North),
            (West, West, West, North, North, North),
            (West, West, West, South, South, South),
            (West, West, West, South, South),
            (West, West, West, South),
        ),
        (
            (West, West),
            (West, West, North),
            (West, West, North, North),
            (West, West, North, North, North),
            (West, West, South, South, South),
            (West, West, South, South),
            (West, West, South),
        ),
        (
            (West,),
            (West, North),
            (West, North, North),
            (West, North, North, North),
            (West, South, South, South),
            (West, South, South),
            (West, South),
        ),
    )
elif size == 8:
    moves = (
        (
            (),
            (North,),
            (North, North),
            (North, North, North),
            (South, South, South, South),
            (South, South, South),
            (South, South),
            (South,),
        ),
        (
            (East,),
            (East, North),
            (East, North, North),
            (East, North, North, North),
            (East, South, South, South, South),
            (East, South, South, South),
            (East, South, South),
            (East, South),
        ),
        (
            (East, East),
            (East, East, North),
            (East, East, North, North),
            (East, East, North, North, North),
            (East, East, South, South, South, South),
            (East, East, South, South, South),
            (East, East, South, South),
            (East, East, South),
        ),
        (
            (East, East, East),
            (East, East, East, North),
            (East, East, East, North, North),
            (East, East, East, North, North, North),
            (East, East, East, South, South, South, South),
            (East, East, East, South, South, South),
            (East, East, East, South, South),
            (East, East, East, South),
        ),
        (
            (West, West, West, West),
            (West, West, West, West, North),
            (West, West, West, West, North, North),
            (West, West, West, West, North, North, North),
            (West, West, West, West, South, South, South, South),
            (West, West, West, West, South, South, South),
            (West, West, West, West, South, South),
            (West, West, West, West, South),
        ),
        (
            (West, West, West),
            (West, West, West, North),
            (West, West, West, North, North),
            (West, West, West, North, North, North),
            (West, West, West, South, South, South, South),
            (West, West, West, South, South, South),
            (West, West, West, South, South),
            (West, West, West, South),
        ),
        (
            (West, West),
            (West, West, North),
            (West, West, North, North),
            (West, West, North, North, North),
            (West, West, South, South, South, South),
            (West, West, South, South, South),
            (West, West, South, South),
            (West, West, South),
        ),
        (
            (West,),
            (West, North),
            (West, North, North),
            (West, North, North, North),
            (West, South, South, South, South),
            (West, South, South, South),
            (West, South, South),
            (West, South),
        ),
    )
elif size == 9:
    moves = (
        (
            (),
            (North,),
            (North, North),
            (North, North, North),
            (North, North, North, North),
            (South, South, South, South),
            (South, South, South),
            (South, South),
            (South,),
        ),
        (
            (East,),
            (East, North),
            (East, North, North),
            (East, North, North, North),
            (East, North, North, North, North),
            (East, South, South, South, South),
            (East, South, South, South),
            (East, South, South),
            (East, South),
        ),
        (
            (East, East),
            (East, East, North),
            (East, East, North, North),
            (East, East, North, North, North),
            (East, East, North, North, North, North),
            (East, East, South, South, South, South),
            (East, East, South, South, South),
            (East, East, South, South),
            (East, East, South),
        ),
        (
            (East, East, East),
            (East, East, East, North),
            (East, East, East, North, North),
            (East, East, East, North, North, North),
            (East, East, East, North, North, North, North),
            (East, East, East, South, South, South, South),
            (East, East, East, South, South, South),
            (East, East, East, South, South),
            (East, East, East, South),
        ),
        (
            (East, East, East, East),
            (East, East, East, East, North),
            (East, East, East, East, North, North),
            (East, East, East, East, North, North, North),
            (East, East, East, East, North, North, North, North),
            (East, East, East, East, South, South, South, South),
            (East, East, East, East, South, South, South),
            (East, East, East, East, South, South),
            (East, East, East, East, South),
        ),
        (
            (West, West, West, West),
            (West, West, West, West, North),
            (West, West, West, West, North, North),
            (West, West, West, West, North, North, North),
            (West, West, West, West, North, North, North, North),
            (West, West, West, West, South, South, South, South),
            (West, West, West, West, South, South, South),
            (West, West, West, West, South, South),
            (West, West, West, West, South),
        ),
        (
            (West, West, West),
            (West, West, West, North),
            (West, West, West, North, North),
            (West, West, West, North, North, North),
            (West, West, West, North, North, North, North),
            (West, West, West, South, South, South, South),
            (West, West, West, South, South, South),
            (West, West, West, South, South),
            (West, West, West, South),
        ),
        (
            (West, West),
            (West, West, North),
            (West, West, North, North),
            (West, West, North, North, North),
            (West, West, North, North, North, North),
            (West, West, South, South, South, South),
            (West, West, South, South, South),
            (West, West, South, South),
            (West, West, South),
        ),
        (
            (West,),
            (West, North),
            (West, North, North),
            (West, North, North, North),
            (West, North, North, North, North),
            (West, South, South, South, South),
            (West, South, South, South),
            (West, South, South),
            (West, South),
        ),
    )

def navi_to_deltalist(goal_x, goal_y, start_x=get_pos_x(), start_y=get_pos_y()):
    dx = goal_x - start_x
    dy = goal_y - start_y
    for fx in moves[dx][dy]:
        move(fx)

def navi_to_deltalist_pos(goal_pos, start_pos):
    goal_x, goal_y = goal_pos
    start_x, start_y = start_pos
    navi_to_deltalist(goal_x, goal_y, start_x, start_y)
